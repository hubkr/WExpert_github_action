name: Build WExpert Setup
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
    runs-on: windows-latest
    
    env:
      Solution_Name: WExpert.sln
      Test_Project_Path: WExpert.Tests.MSTest\WExpert.Tests.MSTest.csproj
      Publish_Project_Path: WExpert\WExpert.csproj
      Output_Directory: publish_output
    
    steps:   
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup .NET 8 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      
    # ✅ Release 빌드일 때만 테스트 실행, 실패해도 계속 진행
    #- name: Run unit tests (Release only)
    #  if: matrix.configuration == 'Release'
    #  continue-on-error: true
    #  run: dotnet test $env:Test_Project_Path --configuration ${{ matrix.configuration }}
    
    # 🔄 NuGet 복원
    - name: Restore solution packages
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=${{ matrix.configuration }}
    
    # 🏗️ 프로젝트 빌드하여 .xbf 파일 생성
    - name: Build project to generate .xbf
      run: msbuild $env:Publish_Project_Path /t:Build /p:Configuration=${{ matrix.configuration }} /p:Platform=x64
    
    # 🚀 Self-contained 앱 퍼블리시 (en-US만 포함)
    - name: Publish self-contained app
      run: |
        dotnet publish $env:Publish_Project_Path `
          --configuration ${{ matrix.configuration }} `
          --runtime win-x64 `
          --self-contained true `
          --output $env:Output_Directory `
          -p:SatelliteResourceLanguages="en-US"
    
    # 📂 빌드 결과 확인 (PowerShell 명령어 수정)
    - name: List published files
      shell: pwsh
      run: |
        if (Test-Path $env:Output_Directory) {
          Write-Host "=== Published files in $env:Output_Directory ==="
          Get-ChildItem -Path $env:Output_Directory -Recurse | Format-Table Name, Length, LastWriteTime -AutoSize
        } else {
          Write-Host "❌ Output directory not found: $env:Output_Directory"
          Write-Host "Available directories:"
          Get-ChildItem -Directory | Format-Table Name -AutoSize
        }
    
    # 📦 빌드 결과물 업로드
    - name: Upload setup artifacts
      uses: actions/upload-artifact@v4
      with:
        name: WExpert-Setup-${{ matrix.configuration }}
        path: ${{ env.Output_Directory }}
        if-no-files-found: warn
