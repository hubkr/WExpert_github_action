name: Build WExpert Setup
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
    runs-on: windows-latest
    
    env:
      Solution_Name: WExpert.sln
      Test_Project_Path: WExpert.Tests.MSTest\WExpert.Tests.MSTest.csproj
      Publish_Project_Path: WExpert\WExpert.csproj
      Output_Directory: publish_output
    
    steps:   
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup .NET 8 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      
    - name: Restore solution packages
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=${{ matrix.configuration }}
    
    - name: Build project to generate .xbf
      run: msbuild $env:Publish_Project_Path /t:Build /p:Configuration=${{ matrix.configuration }} /p:Platform=x64
    
    - name: Publish self-contained app
      run: |
        dotnet publish $env:Publish_Project_Path `
          --configuration ${{ matrix.configuration }} `
          --runtime win-x64 `
          --self-contained true `
          --output $env:Output_Directory
    
    - name: Remove unwanted language folders
      shell: pwsh
      run: |
        $outputPath = $env:Output_Directory
        if (Test-Path $outputPath) {
          Write-Host "Removing unwanted language resource folders..."
          
          $keepLanguages = @("en-US")
          $allDirs = Get-ChildItem -Path $outputPath -Directory
          
          foreach ($dir in $allDirs) {
            $dirName = $dir.Name
            $isLanguageFolder = $false
            
            if ($dirName -match "^[a-z]{2}$" -or $dirName -match "^[a-z]{2}-[A-Z]{2}$") {
              $isLanguageFolder = $true
            }
            
            if ($isLanguageFolder -and $keepLanguages -notcontains $dirName) {
              $muiFiles = Get-ChildItem -Path $dir.FullName -Filter "*.mui" -ErrorAction SilentlyContinue
              $resourcesFiles = Get-ChildItem -Path $dir.FullName -Filter "*.resources.dll" -ErrorAction SilentlyContinue
              
              if ($muiFiles.Count -gt 0 -or $resourcesFiles.Count -gt 0) {
                Write-Host "Removing language folder: $dirName"
                Remove-Item -Path $dir.FullName -Recurse -Force
              }
            }
          }
          
          Write-Host "Language cleanup completed"
          Write-Host "Remaining directories:"
          Get-ChildItem -Path $outputPath -Directory | Select-Object Name
        }
    
    - name: List published files
      shell: pwsh
      run: |
        if (Test-Path $env:Output_Directory) {
          Write-Host "Published files:"
          Get-ChildItem -Path $env:Output_Directory -Recurse
        } else {
          Write-Host "Output directory not found"
          Get-ChildItem -Directory
        }
    
    - name: Upload setup artifacts
      uses: actions/upload-artifact@v4
      with:
        name: WExpert-Setup-${{ matrix.configuration }}
        path: ${{ env.Output_Directory }}
        if-no-files-found: warn
